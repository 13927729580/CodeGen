package {{#if $.Package2}}{{$.Package2}}.{{/if}}service;

import {{#if $.Package1}}{{$.Package1}}.{{/if}}model.{{model}};
import {{#if $.Package2}}{{$.Package2}}.{{/if}}dao.{{model}}Dao;
import {{#if $.Package1}}{{$.Package1}}.{{/if}}service.{{model}}WriteService;

import io.terminus.common.model.Response;
import io.terminus.boot.rpc.common.annotation.RpcProvider;

import com.google.common.base.Throwables;
import lombok.extern.slf4j.Slf4j;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

/**
 * Desc:
 * Mail: {{$.email}}
 * Date: {{$.Now}}
 * Created by {{$.author}}
 */
@Slf4j
@Service
@RpcProvider
public class {{model}}WriteServiceImpl implements {{model}}WriteService {

    @Autowired
    private {{model}}Dao {{LowerCase model}}Dao;

    @Override
    public Response<Long> create({{model}} {{LowerCase model}}) {
        try{
            {{LowerCase model}}Dao.create({{LowerCase model}});
            return Response.ok({{LowerCase model}}.getId());
        }catch (Exception e){
            log.error("failed to create {{Split (LowerCase model) ' '}}, cause:{}", Throwables.getStackTraceAsString(e));
            return Response.fail("{{Split (LowerCase model) '.'}}.create.fail");
        }
    }

    @Override
    public Response<Boolean> update({{model}} {{LowerCase model}}) {
        try{
            return Response.ok({{LowerCase model}}Dao.update({{LowerCase model}}));
        }catch (Exception e){
            log.error("failed to update {{Split (LowerCase model) ' '}}, cause:{}", Throwables.getStackTraceAsString(e));
            return Response.fail("{{Split (LowerCase model) '.'}}.update.fail");
        }
    }

   @Override
    public Response<Boolean> delete(Long id) {
        try{
            return Response.ok({{LowerCase model}}Dao.delete(id));
        }catch (Exception e){
            log.error("failed to delete {{Split (LowerCase model) ' '}} by id:{}, cause:{}", id,  Throwables.getStackTraceAsString(e));
            return Response.fail("delete.{{Split (LowerCase model) '.'}}.fail");
        }
    }

}