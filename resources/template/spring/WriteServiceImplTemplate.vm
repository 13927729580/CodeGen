
import io.terminus.common.model.Response;
import io.terminus.boot.rpc.common.annotation.RpcProvider;

import com.google.common.base.Throwables;
import lombok.extern.slf4j.Slf4j;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

/**
 *
 * @author: ${email}
 * @date: ${Now}
 * Created by CodeGen .
 */
@Slf4j
@Service
@RpcProvider
public class ${model}WriteServiceImpl implements ${model}WriteService {

    @Autowired
    private ${model}Dao ${model}Dao;

    @Override
    public Response<Long> create(${model} ${model}) {
        try{
            ${model}Dao.create(${model});
            return Response.ok(${model}.getId());
        }catch (Exception e){
            log.error("failed to create {{Split (LowerCase model) ' '}}, cause:{}", Throwables.getStackTraceAsString(e));
            return Response.fail("{{Split (LowerCase model) '.'}}.create.fail");
        }
    }

    @Override
    public Response<Boolean> update(${model} ${model}) {
        try{
            return Response.ok(${model}Dao.update(${model}));
        }catch (Exception e){
            log.error("failed to update {{Split (LowerCase model) ' '}}, cause:{}", Throwables.getStackTraceAsString(e));
            return Response.fail("{{Split (LowerCase model) '.'}}.update.fail");
        }
    }

   @Override
    public Response<Boolean> delete(Long id) {
        try{
            return Response.ok(${model}Dao.delete(id));
        }catch (Exception e){
            log.error("failed to delete {{Split (LowerCase model) ' '}} by id:{}, cause:{}", id,  Throwables.getStackTraceAsString(e));
            return Response.fail("{{Split (LowerCase model) '.'}}.delete.fail");
        }
    }

}