
import io.terminus.common.model.Paging;
import org.junit.Assert;
import org.junit.Before;
import org.junit.Test;
import org.springframework.beans.factory.annotation.Autowired;

import java.util.HashMap;
import java.util.Map;
import java.util.List;

/**
 *
 * @author $!{email}
 * @date ${Now}
 * Created by CodeGen .
 */
public class ${model}DaoTest extends BaseDaoTest {

    private ${model} #LowerCase(${model});

    @Autowired
    private ${model}Dao ${model}Dao;

    @Before
    public void setUp() {
    #foreach($item in $fields)
        //#LowerCase(${model}).set${item.field}();
    #end
        #LowerCase(${model})Dao.create(#LowerCase(${model}));
    }

    @Test
    public void testCreate() {
        ${model} actual = #LowerCase(${model})Dao.findById(#LowerCase(${model}).getId());
        Assert.assertNotNull(actual.getId());
    }

    @Test
    public void testDelete() {
        #LowerCase(${model})Dao.delete(#LowerCase(${model}).getId());
        ${model} actual = #LowerCase(${model})Dao.findById(#LowerCase(${model}).getId());
        Assert.assertNull(actual);
    }


    @Test
    public void testFindById() {
        ${model} actual = #LowerCase(${model})Dao.findById(#LowerCase(${model}).getId());
        Assert.assertNotNull(actual);
    }

    @Test
    public void testUpdate() {
        ${model} actual1 = #LowerCase(${model})Dao.findById(#LowerCase(${model}).getId());
        Assert.assertNotNull(actual1);
        #foreach($item in $fields)
            {{#each fields}}//actual1.set{{field}}();
        #end
        #LowerCase(${model})Dao.update(actual1);
        ${model} actual2 = #LowerCase(${model})Dao.findById(#LowerCase(${model}).getId());
        #foreach($item in $fields)
            //Assert.assertEquals(actual2.get${field}(), null);
        #end

    @Test
    public void testList() {
        Map<String, Object> params = new HashMap<>();
        List<${model}> actual = #LowerCase(${model})Dao.list(params);
        Assert.assertNotNull(actual.get(0));
    }

    @Test
    public void testPaging() {
        Paging<${model}> paging = #LowerCase(${model})Dao.paging(0, 20, #LowerCase(${model}));
        Assert.assertTrue(!paging.getData().isEmpty());
    }
}
