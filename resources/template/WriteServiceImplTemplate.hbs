
import io.terminus.common.model.Response;
import io.terminus.boot.rpc.common.annotation.RpcProvider;

import com.google.common.base.Throwables;
import lombok.extern.slf4j.Slf4j;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

/**
 * Desc:
 * Mail: hehaiyang@terminus.io
 * Date: 2017/3/17
 */
@Slf4j
@Service
@RpcProvider
public class {{modelName}}WriteServiceImpl implements {{modelName}}WriteService {

    @Autowired
    private {{modelName}}Dao {{LowerCase modelName}}Dao;

    @Override
    public Response<Long> create({{modelName}} {{LowerCase modelName}}) {
        try{
            {{LowerCase modelName}}Dao.create({{LowerCase modelName}});
            return Response.ok({{LowerCase modelName}}.getId());
        }catch (Exception e){
            log.error("failed to create {{LowerCase modelName}}, cause:{}", Throwables.getStackTraceAsString(e));
            return Response.fail("{{LowerCase modelName}}.create.fail");
        }
    }

    @Override
    public Response<Boolean> update({{modelName}} {{LowerCase modelName}}) {
        try{
            return Response.ok({{LowerCase modelName}}Dao.update({{LowerCase modelName}}));
        }catch (Exception e){
            log.error("failed to update {{LowerCase modelName}}, cause:{}", Throwables.getStackTraceAsString(e));
            return Response.fail("{{LowerCase modelName}}.update.fail");
        }
    }

   @Override
    public Response<Boolean> delete(Long id) {
        try{
            return Response.ok({{LowerCase modelName}}Dao.delete(id));
        }catch (Exception e){
            log.error("failed to delete {{LowerCase modelName}} by id:{}, cause:{}", id,  Throwables.getStackTraceAsString(e));
            return Response.fail("delete.{{LowerCase modelName}}.fail");
        }
    }

}